{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst ReadPosts = initialPosts => {\n  _s();\n  const [posts, setPosts] = useState(initialPosts);\n  const addPost = content => {\n    const newPost = {\n      id: posts.length + 1,\n      content: content,\n      author: \"Current User\",\n      // Replace with actual user info\n      timestamp: new Date().toLocaleString()\n    };\n    setPosts([newPost, ...posts]);\n  };\n  return {\n    posts,\n    addPost\n  };\n};\n_s(ReadPosts, \"6LYIuqiz1ip69S1k3Q18hpVCanQ=\");\n_c = ReadPosts;\nexport default ReadPosts;\nvar _c;\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["useState","ReadPosts","initialPosts","_s","posts","setPosts","addPost","content","newPost","id","length","author","timestamp","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ass2-full-stack/full-stack-project/frontend/src/components/post/ReadPost.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst ReadPosts = (initialPosts) => {\r\n  const [posts, setPosts] = useState(initialPosts);\r\n\r\n  const addPost = (content) => {\r\n    const newPost = {\r\n      id: posts.length + 1,\r\n      content: content,\r\n      author: \"Current User\", // Replace with actual user info\r\n      timestamp: new Date().toLocaleString(),\r\n    };\r\n    setPosts([newPost, ...posts]);\r\n  };\r\n\r\n  return {\r\n    posts,\r\n    addPost,\r\n  };\r\n};\r\n\r\nexport default ReadPosts;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,SAAS,GAAIC,YAAY,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACE,YAAY,CAAC;EAEhD,MAAMI,OAAO,GAAIC,OAAO,IAAK;IAC3B,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEL,KAAK,CAACM,MAAM,GAAG,CAAC;MACpBH,OAAO,EAAEA,OAAO;MAChBI,MAAM,EAAE,cAAc;MAAE;MACxBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;IACvC,CAAC;IACDT,QAAQ,CAAC,CAACG,OAAO,EAAE,GAAGJ,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,OAAO;IACLA,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAjBIF,SAAS;AAAAc,EAAA,GAATd,SAAS;AAmBf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}