{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ass2-full-stack\\\\full-stack-project\\\\frontend\\\\src\\\\components\\\\UserPosts.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = ({\n  initialPosts\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const usePosts = initialPosts => {\n    _s();\n    const [posts, setPosts] = useState(initialPosts);\n    const addPost = content => {\n      const newPost = {\n        id: posts.length + 1,\n        content: content,\n        author: \"Current User\",\n        // Replace with actual user info\n        timestamp: new Date().toLocaleString()\n      };\n      setPosts([newPost, ...posts]);\n    };\n    return {\n      posts,\n      addPost\n    };\n  };\n  _s(usePosts, \"6LYIuqiz1ip69S1k3Q18hpVCanQ=\");\n  const {\n    posts,\n    addPost\n  } = usePosts(initialPosts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 border rounded shadow-sm bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts yet. Be the first to post something!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserPosts, \"dOX5cxWMkteRv9EtdIuiYtC3GdY=\", true);\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserPosts","initialPosts","_s2","_s","$RefreshSig$","usePosts","posts","setPosts","addPost","content","newPost","id","length","author","timestamp","Date","toLocaleString","className","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ass2-full-stack/full-stack-project/frontend/src/components/UserPosts.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nconst UserPosts = ({ initialPosts  }) => {\r\n\r\n  const usePosts = (initialPosts) => {\r\n    const [posts, setPosts] = useState(initialPosts);\r\n\r\n    const addPost = (content) => {\r\n      const newPost = {\r\n        id: posts.length + 1,\r\n        content: content,\r\n        author: \"Current User\", // Replace with actual user info\r\n        timestamp: new Date().toLocaleString(),\r\n      };\r\n      setPosts([newPost, ...posts]);\r\n    };\r\n\r\n    return {\r\n      posts,\r\n      addPost,\r\n    };\r\n  };\r\n\r\n  const { posts, addPost } = usePosts(initialPosts);\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      {posts.length > 0 ? (\r\n        posts.map((post) => (\r\n          <div key={post.id} className=\"mb-4 p-4 border rounded shadow-sm bg-white\">\r\n            <p className=\"text-lg\">{post.content}</p>\r\n            <div className=\"text-sm text-gray-500\">\r\n              <p>Posted by {post.author}</p>\r\n              <p>{post.timestamp}</p>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No posts yet. Be the first to post something!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPosts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEvC,MAAMC,QAAQ,GAAIJ,YAAY,IAAK;IAAAE,EAAA;IACjC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACI,YAAY,CAAC;IAEhD,MAAMO,OAAO,GAAIC,OAAO,IAAK;MAC3B,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEL,KAAK,CAACM,MAAM,GAAG,CAAC;QACpBH,OAAO,EAAEA,OAAO;QAChBI,MAAM,EAAE,cAAc;QAAE;QACxBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;MACvC,CAAC;MACDT,QAAQ,CAAC,CAACG,OAAO,EAAE,GAAGJ,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO;MACLA,KAAK;MACLE;IACF,CAAC;EACH,CAAC;EAACL,EAAA,CAjBIE,QAAQ;EAmBd,MAAM;IAAEC,KAAK;IAAEE;EAAQ,CAAC,GAAGH,QAAQ,CAACJ,YAAY,CAAC;EAEjD,oBACEF,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBZ,KAAK,CAACM,MAAM,GAAG,CAAC,GACfN,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACbrB,OAAA;MAAmBkB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACvEnB,OAAA;QAAGkB,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEE,IAAI,CAACX;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCzB,OAAA;QAAKkB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCnB,OAAA;UAAAmB,QAAA,GAAG,YAAU,EAACE,IAAI,CAACP,MAAM;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BzB,OAAA;UAAAmB,QAAA,EAAIE,IAAI,CAACN;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA,GALEJ,IAAI,CAACT,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACN,CAAC,gBAEFzB,OAAA;MAAAmB,QAAA,EAAG;IAA6C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACpD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,GAAA,CAxCIF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}