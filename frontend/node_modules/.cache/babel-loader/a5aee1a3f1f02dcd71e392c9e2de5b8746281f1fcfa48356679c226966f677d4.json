{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ass2-full-stack\\\\full-stack-project\\\\frontend\\\\src\\\\components\\\\UserPosts.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 border rounded shadow-sm bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts yet. Be the first to post something!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserPosts","posts","className","children","length","map","post","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ass2-full-stack/full-stack-project/frontend/src/components/UserPosts.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst UserPosts = ({ posts }) => {\r\n  return (\r\n    <div className=\"mt-4\">\r\n      {posts.length > 0 ? (\r\n        posts.map((post, index) => (\r\n          <div key={index} className=\"mb-4 p-4 border rounded shadow-sm bg-white\">\r\n            <p>{post}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No posts yet. Be the first to post something!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPosts;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC/B,oBACEF,OAAA;IAAKG,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBF,KAAK,CAACG,MAAM,GAAG,CAAC,GACfH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBR,OAAA;MAAiBG,SAAS,EAAC,4CAA4C;MAAAC,QAAA,eACrEJ,OAAA;QAAAI,QAAA,EAAIG;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADLJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN,CAAC,gBAEFZ,OAAA;MAAAI,QAAA,EAAG;IAA6C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACpD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,EAAA,GAdIZ,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}